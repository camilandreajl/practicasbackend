enum Enum_RoleName {
  Admin
}

#--------------------------Account-----------------------
type Account {
  id: ID!
  type: String!
  provider: String!
  providerAccountId: String!
  refresh_token: String
  access_token: String
  expires_at: Int
  token_type: String
  scope: String
  id_token: String
  session_state: String
  oauth_token_secret: String
  oauth_token: String
  userId: String!
  user: User!
}
input AccountCreateInput {
  type: String!
  provider: String!
  providerAccountId: String!
  refresh_token: String
  access_token: String
  expires_at: Int
  token_type: String
  scope: String
  id_token: String
  session_state: String
  oauth_token_secret: String
  oauth_token: String
  userId: String!
}
input AccountWhereUniqueInput {
  id: String!
}
input AccountUpdateInput {
  type: String
  provider: String
  providerAccountId: String
  refresh_token: String
  access_token: String
  expires_at: Int
  token_type: String
  scope: String
  id_token: String
  session_state: String
  oauth_token_secret: String
  oauth_token: String
  userId: String
}
#--------------------------Session-----------------------
type Session {
  id: ID!
  sessionToken: String!
  expires: AWSDateTime!
  userId: String!
  user: User!
}
input SessionCreateInput {
  sessionToken: String!
  expires: AWSDateTime!
  userId: String!
}
input SessionWhereUniqueInput {
  id: String!
}
input SessionUpdateInput {
  sessionToken: String
  expires: AWSDateTime
  userId: String
}
#--------------------------User-----------------------
type User {
  id: ID!
  name: String!
  lastName: String
  email: String!
  emailVerified: AWSDateTime
  image: String
  identification: String
  account: Account
  sessions: [Session]
  role: Role!
  roleId: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}
input UserCreateInput {
  name: String!
  lastName: String
  email: String!
  emailVerified: AWSDateTime
  image: String
  identification: String
  roleId: String!
}
input UserWhereUniqueInput {
  id: String!
}
input UserUpdateInput {
  name: String
  lastName: String
  email: String
  emailVerified: AWSDateTime
  image: String
  identification: String
  roleId: String
}
#--------------------------Role-----------------------
type Role {
  id: ID!
  name: Enum_RoleName!
  users: [User]
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}
input RoleCreateInput {
  name: Enum_RoleName!
}
input RoleWhereUniqueInput {
  id: String!
}
input RoleUpdateInput {
  name: Enum_RoleName
}

type Mutation {
  # Account
  createAccount(data: AccountCreateInput): Account
  updateAccount(
    where: AccountWhereUniqueInput!
    data: AccountUpdateInput
  ): Account
  upsertAccount(
    where: AccountWhereUniqueInput!
    data: AccountCreateInput
  ): Account
  deleteAccount(where: AccountWhereUniqueInput!): Account
  # Session
  createSession(data: SessionCreateInput): Session
  updateSession(
    where: SessionWhereUniqueInput!
    data: SessionUpdateInput
  ): Session
  upsertSession(
    where: SessionWhereUniqueInput!
    data: SessionCreateInput
  ): Session
  deleteSession(where: SessionWhereUniqueInput!): Session
  # User
  createUser(data: UserCreateInput): User
  updateUser(where: UserWhereUniqueInput!, data: UserUpdateInput): User
  upsertUser(where: UserWhereUniqueInput!, data: UserCreateInput): User
  deleteUser(where: UserWhereUniqueInput!): User
  # Role
  createRole(data: RoleCreateInput): Role
  updateRole(where: RoleWhereUniqueInput!, data: RoleUpdateInput): Role
  upsertRole(where: RoleWhereUniqueInput!, data: RoleCreateInput): Role
  deleteRole(where: RoleWhereUniqueInput!): Role
}

type Query {
  # Account
  accounts: [Account]
  account(id: String!): Account
  # Session
  sessions: [Session]
  session(id: String!): Session
  # User
  users: [User]
  user(id: String!): User
  # Role
  roles: [Role]
  role(id: String!): Role
}
